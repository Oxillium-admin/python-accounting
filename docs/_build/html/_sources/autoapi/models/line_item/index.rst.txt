:py:mod:`models.line_item`
==========================

.. py:module:: models.line_item

.. autoapi-nested-parse::

   Represents the individual entries in a Transaction that will eventually be posted to the Ledger.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   models.line_item.LineItem




.. py:class:: LineItem(**kw: Any)


   Bases: :py:obj:`src.mixins.IsolatingMixin`, :py:obj:`src.models.Recyclable`

   Represents a Line Item which the other side of the double entry from the main account
   of a Transaction.

   .. attribute:: id

      The primary key of the Line Item database record.

      :type: int

   .. attribute:: narration

      A short description of the Line Item's contribution to the
      Transaction.

      :type: str

   .. attribute:: quantity

      The multiple of the Line Item amount to be posted to the
      Ledger.

      :type: Decimal

   .. attribute:: amount

      The amount to be posted to the Line Item Account.

      :type: Decimal

   .. attribute:: credited

      Determines whether the Line Item amount will
      be posted to the credit side of the Line Item Account. Defaults to False.

      :type: :obj:`bool`, optional

   .. attribute:: tax_inclusive

      Determines whether the Tax amount of the
      Line Item is included in the Line Item amount. Defaults to False.

      :type: :obj:`bool`, optional

   .. attribute:: account_id

      The id of the Account model associated with the Line Item.

      :type: int

   .. attribute:: transaction_id

      The id of the Transaction model associated
      with the Line Item.

      :type: :obj:`int`, optional

   .. attribute:: tax_id

      The id of the Tax model associated with the Line Item.

      :type: :obj:`int`, optional

   .. py:attribute:: __tablename__
      :value: 'line_item'

      

   .. py:attribute:: __mapper_args__

      

   .. py:attribute:: id
      :type: sqlalchemy.orm.Mapped[int]

      

   .. py:attribute:: narration
      :type: sqlalchemy.orm.Mapped[str]

      

   .. py:attribute:: quantity
      :type: sqlalchemy.orm.Mapped[decimal.Decimal]

      

   .. py:attribute:: amount
      :type: sqlalchemy.orm.Mapped[decimal.Decimal]

      

   .. py:attribute:: credited
      :type: sqlalchemy.orm.Mapped[bool]

      

   .. py:attribute:: tax_inclusive
      :type: sqlalchemy.orm.Mapped[bool]

      

   .. py:attribute:: account_id
      :type: sqlalchemy.orm.Mapped[int]

      

   .. py:attribute:: transaction_id
      :type: sqlalchemy.orm.Mapped[int]

      

   .. py:attribute:: tax_id
      :type: sqlalchemy.orm.Mapped[int]

      

   .. py:attribute:: account
      :type: sqlalchemy.orm.Mapped[Account]

      

   .. py:attribute:: tax
      :type: sqlalchemy.orm.Mapped[Tax]

      

   .. py:attribute:: transaction
      :type: sqlalchemy.orm.Mapped[Transaction]

      

   .. py:attribute:: ledgers
      :type: sqlalchemy.orm.Mapped[List[Ledger]]

      

   .. py:method:: validate_ledgers(key, ledger, is_remove)

      validates adding or removing of Line Item Ledgers.


   .. py:method:: __repr__() -> str


   .. py:method:: validate(_) -> None

      Validates the Line Item properties.

      :param session: The accounting session to which the Line Item belongs.
      :type session: Session

      :raises NegativeAmountError: If the Line Item amount or quantity is less than 0.

      :returns: None


   .. py:method:: validate_delete(session) -> None

      Validates if the line item can be deleted.




